{"version":3,"sources":["component/Header.js","apis/items.js","component/Input.js","actions/index.js","actions/types.js","component/List.js","component/App.js","reducers/index.js","reducers/itemReducer.js","index.js"],"names":["Header","className","axios","create","baseURL","Input","renderInput","input","label","meta","classCheck","error","touched","type","placeholder","autoComplete","renderError","renderExpiryMonth","renderExpiryYear","renderCategory","onSubmit","formValues","props","createItem","this","handleSubmit","Field","name","component","renderButton","React","Component","formWrapped","reduxForm","form","validate","errors","description","expiryDateMonth","expiryDateYear","category","connect","dispatch","a","items","post","response","payload","data","List","fetchItems","console","log","map","item","key","id","onClick","deleteItem","renderList","state","Object","values","get","delete","App","combineReducers","formReducer","action","_","mapKeys","omit","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ac3aba91.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return(\n    <section className=\"hero is-small is-primary is-bold\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title\">\n            Welcome to our Fridge\n          </h1>\n          <h2 className=\"subtitle\">\n            This tool tracks fridge's inventory in our home!\n          </h2>\n        </div>\n      </div>\n    </section>\n  );\n\n};\n\nexport default Header;","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://fridge-backend-api.herokuapp.com'\n});","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { createItem } from '../actions';\n\nclass Input extends React.Component {\n\n  renderError({ error, touched }) {\n    if(touched && error) {\n      return (\n        <div className=\"help is-danger\">{error}</div>\n      );\n    }\n  };\n\n  renderInput = ({ input, label, meta }) => {\n    const classCheck = `input ${meta.error && meta.touched ? 'is-danger': ''}`;\n    return (\n\n      <div className=\"field is-horizontal column is-four-fifths\">\n        <div className=\"field-label is-normal\">\n          <label className=\"label\">{label}</label>\n        </div>\n\n        <div className=\"field-body\">\n          <div className=\"field\">\n            <div className=\"control\">\n              <input\n                className={classCheck}\n                type=\"text\"\n                placeholder=\"Text input\"\n                {...input} autoComplete=\"off\"\n              ></input>\n              {this.renderError(meta)}\n            </div>\n\n          </div>\n\n        </div>\n\n      </div>\n\n\n    );\n  }\n\n  renderExpiryMonth = ({input, label, meta}) => {\n    const classCheck = `select ${meta.error && meta.touched ? 'is-danger': ''}`;\n    return (\n      <div className=\"field is-horizontal column is-four-fifths\">\n        <div className=\"field-label is-normal\">\n          <label className=\"label\">{label}</label>\n        </div>\n\n        <div className=\"field-body\">\n          <div className=\"control\">\n              <span className={classCheck}>\n                <select {...input}>\n                  <option>Select</option>\n                  <option>1</option>\n                  <option>2</option>\n                  <option>3</option>\n                  <option>4</option>\n                  <option>5</option>\n                  <option>6</option>\n                  <option>7</option>\n                  <option>8</option>\n                  <option>9</option>\n                  <option>10</option>\n                  <option>11</option>\n                  <option>12</option>\n                </select>\n              </span>\n              {this.renderError(meta)}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderExpiryYear = ({ input, label, meta }) => {\n    const classCheck = `select ${meta.error && meta.touched ? 'is-danger': ''}`;\n    return(\n      <div className=\"field is-horizontal column is-four-fifths\">\n        <div className=\"field-label is-normal\">\n          <label className=\"label\">{label}</label>\n        </div>\n        <div className=\"field-body\">\n          <div className=\"control\">\n            <span className={classCheck}>\n              <select {...input}>\n                <option>Select</option>\n                <option>2020</option>\n                <option>2021</option>\n                <option>2022</option>\n                <option>2023</option>\n                <option>2024</option>\n                <option>2025</option>\n              </select>\n            </span>\n            {this.renderError(meta)}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderCategory = ({ input, label, meta }) => {\n    const classCheck = `select ${meta.error && meta.touched ? 'is-danger': ''}`;\n    return (\n      <div className=\"field is-horizontal column is-four-fifths\">\n        <div className=\"field-label is-normal\">\n          <label className=\"label\">{label}</label>\n        </div>\n\n        <div className=\"field-body\">\n          <div className=\"control\">\n              <span className={classCheck}>\n                <select {...input}>\n                  <option>Select</option>\n                  <option>Fridge</option>\n                  <option>Freezer</option>\n                </select>\n              </span>\n              {this.renderError(meta)}\n          </div>\n\n\n        </div>\n      </div>\n    );\n  }\n\n  renderButton(){\n    return(\n      <div className=\"field is-horizontal column is-four-fifths\">\n        <div className=\"field-label\">\n          {/* Left empty for spacing */}\n        </div>\n\n        <div className=\"field-body\">\n          <div className=\"field\">\n            <div className=\"control\">\n              <button className=\"button is-primary\">Submit</button>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n\n  onSubmit = (formValues) => {\n    this.props.createItem(formValues);\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\n        <Field name=\"description\" component={this.renderInput} label=\"Item Name\" />\n        <Field name=\"expiryDateMonth\" component={this.renderExpiryMonth} label=\"Expiry Date Month\" />\n        <Field name=\"expiryDateYear\" component={this.renderExpiryYear} label=\"Expiry Date Year\" />\n        <Field name=\"category\" component={this.renderCategory} label=\"Category\" />\n        <Field name=\"button\" component={this.renderButton} />\n      </form>\n    );\n  }\n\n};\n\nconst validate = formValues => {\n  const errors = {};\n  if(!formValues.description) {\n    errors.description = 'You must enter the item description'\n  }\n  if(!formValues.expiryDateMonth || formValues.expiryDateMonth === \"Select\") {\n    errors.expiryDateMonth = \"You must select month of expiry\"\n  }\n  if(!formValues.expiryDateYear || formValues.expiryDateYear === \"Select\") {\n    errors.expiryDateYear = \"You must select year of expiry\"\n  }\n  if(!formValues.category || formValues.category === \"Select\") {\n    errors.category = \"You must select a category\"\n  }\n\n  return errors;\n};\n\nconst formWrapped = reduxForm({\n  form: 'itemCreate',\n  validate\n})(Input);\n\nexport default connect(null, {createItem})(formWrapped);","import items from '../apis/items';\nimport {\n  CREATE_ITEM,\n  FETCH_ITEMS,\n  FETCH_ITEM,\n  DELETE_ITEM,\n  EDIT_ITEM\n} from './types';\n\n\nexport const createItem = formValues => async dispatch => {\n  const response = await items.post('/items', formValues);\n\n  dispatch({ type: CREATE_ITEM, payload: response.data });\n  }\n\nexport const fetchItems = () => async dispatch => {\n  const response = await items.get('/items');\n\n  dispatch({ type: FETCH_ITEMS, payload: response.data });\n}\n\nexport const fetchItem = (id) => async dispatch => {\n  const response = await items.get(`/items/${id}`);\n\n  dispatch({ type: FETCH_ITEM, payload: response.data });\n}\n\nexport const deleteItem = (id) => async dispatch => {\n  await items.delete(`/items/${id}`);\n\n  dispatch({ type: DELETE_ITEM, payload: id });\n}\n\nexport const editItem = (id, formValues) => async dispatch => {\n  const response = await items.put(`/items/${id}`, formValues);\n\n  dispatch({ type: EDIT_ITEM, payload: response.data });\n}","export const CREATE_ITEM = 'CREATE_ITEM';\nexport const FETCH_ITEMS = 'FETCH_ITEMS';\nexport const FETCH_ITEM = 'FETCH_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const EDIT_ITEM = 'EDIT_ITEM';","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchItems, deleteItem } from '../actions';\n\nclass List extends React.Component {\n  componentDidMount(){\n    this.props.fetchItems();\n  }\n\n  renderList() {\n    console.log(this.props.items);\n    return this.props.items.map(item => {\n      return (\n        <div className=\"column is-one-third\">\n          <div className=\"message\" key={item.id}>\n            <div className=\"message-header\">\n              <p>{item.description}</p>\n              <button onClick={() => this.props.deleteItem(item.id) } className=\"delete\"></button>\n            </div>\n            <div className=\"message-body\">\n              Expiry Date: {item.expiryDateMonth}/{item.expiryDateYear}\n              <br></br>\n              Category: {item.category}\n            </div>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"columns is-multiline is-mobile\">\n        {this.renderList()}\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {items: Object.values(state.items)}\n}\n\nexport default connect(mapStateToProps, { fetchItems, deleteItem })(List);","import React from 'react';\n\nimport Header from './Header';\nimport Input from './Input';\nimport List from './List';\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <Input />\n      <List />\n    </div>\n  );\n};\n\nexport default App;","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport itemReducer from './itemReducer';\n\nexport default combineReducers ({\n  form: formReducer,\n  items: itemReducer\n});","import _ from 'lodash';\n\nimport {\n  FETCH_ITEM,\n  FETCH_ITEMS,\n  CREATE_ITEM,\n  EDIT_ITEM,\n  DELETE_ITEM\n} from '../actions/types';\n\nexport default (state ={}, action) => {\n  switch (action.type) {\n    case FETCH_ITEMS:\n      return { ...state, ..._.mapKeys(action.payload, 'id') };\n    case FETCH_ITEM:\n      return { ...state, [action.payload.id]: action.payload };\n    case CREATE_ITEM:\n      return { ...state, [action.payload.id]: action.payload };\n    case EDIT_ITEM:\n      return { ...state, [action.payload.id]: action.payload };\n    case DELETE_ITEM:\n      return _.omit(state, action.payload);\n    default:\n      return state;\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './component/App';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.querySelector('#root')\n);"],"sourceRoot":""}